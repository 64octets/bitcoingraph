#!/usr/bin/env python

import argparse
import sys
from bitcoingraph import export


def progress(p=0):
    p = int(p * 100)
    sys.stdout.write('\rProgress: {}%'.format(p))
    sys.stdout.flush()

parser = argparse.ArgumentParser(
    description='Export transactions from blockchain')
parser.add_argument('number_of_blocks', type=int,
                    help='Number of blocks')
parser.add_argument('-b', '--start-block-hash', type=str,
                    default='000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',
                    help='Start block hash')
parser.add_argument('-o', '--output_path', type=str,
                    help='Output path')
parser.add_argument('--plain-header', action='store_true',
                    help='Create header without Neo4J field types')
parser.add_argument('--no-separate-header', action='store_true',
                    help='Write CSV files without any header')


if len(sys.argv) <= 1:
    parser.print_help()
    sys.exit(1)

args = parser.parse_args()
export.export(
    args.number_of_blocks,
    args.start_block_hash,
    args.output_path,
    args.plain_header,
    not args.no_separate_header,
    progress)
